import com.android.builder.core.DefaultManifestParser

apply plugin: 'com.android.application'

ext {
    // Obtained from ~/.gradle/gradle.properties on build server or load default empty strings.
    ANALYTICS_TRACKING_ID = project.properties['TOOLKIT_ANALYTICS_TRACKING_ID'] ?: ""
    RELEASE_STORE_FILE = project.properties['RELEASE_STORE_FILE'] ?: "."
    RELEASE_STORE_PASSWORD = project.properties['RELEASE_STORE_PASSWORD'] ?: ""
    RELEASE_KEY_ALIAS = project.properties['RELEASE_KEY_ALIAS'] ?: ""
    RELEASE_KEY_PASSWORD = project.properties['RELEASE_KEY_PASSWORD'] ?: ""
    TRUSTED_SOURCE_PUBLIC_KEY = project.properties['TRUSTED_SOURCE_PUBLIC_KEY'] ?:
            "MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDHiuy2ULV4pobkuQN2TEjmR1tn" +
                    "HJ+F335hm/lVdaFQzvBmeq64MUMbumheVLDJaSUiAVzqSHDKJWH01ZQRowqBYjwo" +
                    "ycVSQSeO2glc6XZZ+CJudAPXe8iFWLQp3kBBnBmVcBXCOQFO7aLgQMv4nqKZsLW0" +
                    "HaAJkjpnc165Os+aYwIDAQAB";
}

android {
    compileSdkVersion "Google Inc.:Google APIs:24"
    buildToolsVersion "25.0.0"

    defaultConfig {
        applicationId "dalvik.commcare.org.commcaretoolkit"
        minSdkVersion 11
        targetSdkVersion 25
        versionCode getVersionCode()
        versionName getVersionName()
        buildConfigField "String", "ANALYTICS_TRACKING_ID", "\"${project.ext.ANALYTICS_TRACKING_ID}\""
        buildConfigField "String", "BUILD_NUMBER", "\"" + getVersionCode() + "\""
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    signingConfigs {
        release {
            storeFile file(project.ext.RELEASE_STORE_FILE)
            storePassword project.ext.RELEASE_STORE_PASSWORD
            keyAlias project.ext.RELEASE_KEY_ALIAS
            keyPassword project.ext.RELEASE_KEY_PASSWORD
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}


/**
 * Get the version code from command line param
 *
 * @return int If the param -PversionCode is present then return int value or 1
 */
def getVersionCode() {
    def code = project.hasProperty('versionCode') ? versionCode.toInteger() : 1
    println "VersionCode is set to $code"
    return code
}

def getVersionName() {
    def manifestParser = new DefaultManifestParser(android.sourceSets.main.manifest.srcFile)
    return manifestParser.getVersionName()
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:22.2.1'
    compile 'com.android.support:design:22.2.1'
    compile 'com.google.android.gms:play-services-analytics:9.2.0'
}

apply plugin: 'com.google.gms.google-services'